package task8.servlet;

import java.util.ArrayList;
import java.util.HashMap;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import task8.entity.ChatMessage;
import task8.entity.ChatUser;
import task8.entity.jokesClass;

public class ChatServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	//  арта текущих пользователей
	protected HashMap<String, ChatUser> activeUsers;
	// —писок сообщений чата
	protected ArrayList<ChatMessage> messages;
	protected HashMap<String, jokesClass> timers;

	@SuppressWarnings("unchecked")
	public void init() throws ServletException {
		// ¬ызвать унаследованную от HttpServlet версию init()
		super.init();
		// »звлечь из контекста карту пользователей и список сообщений
		activeUsers = (HashMap<String, ChatUser>) getServletContext().getAttribute("activeUsers");
		messages = (ArrayList<ChatMessage>) getServletContext().getAttribute("messages");
		timers = (HashMap<String, jokesClass>) getServletContext().getAttribute("timers");
		// ≈сли карта пользователей не определена ...
		if (activeUsers == null) {
			// —оздать новую карту
			activeUsers = new HashMap<String, ChatUser>();
			// ѕоместить е? в контекст сервлета,
			// чтобы другие сервлеты могли до него добратьс€
			getServletContext().setAttribute("activeUsers", activeUsers);
		}
		// ≈сли список сообщений не определ?н ...
		if (messages == null) {
			// —оздать новый список
			messages = new ArrayList<ChatMessage>(100);
			// ѕоместить его в контекст сервлета,
			// чтобы другие сервлеты могли до него добрать
			getServletContext().setAttribute("messages", messages);
		}
		if(timers == null){
			timers = new HashMap<String, jokesClass>(100);
			getServletContext().setAttribute("timers", timers);
		}
	}
}